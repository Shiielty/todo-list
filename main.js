(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Inconsolata:wght@300;400;700&family=Inknut+Antiqua:wght@300;400;700&family=Roboto:wght@300;400;700&display=swap);"]),i.push([n.id,"/* font-family: 'Inconsolata', monospace;\nfont-family: 'Inknut Antiqua', serif;\nfont-family: 'Roboto', sans-serif; */\n\n:root {\n    --black: #164E63;\n    --grey: rgba(0, 0, 0, 0.75);\n    --deepsea: #155E75;\n    --darkblue: #0E7490;\n    --blue: #06B6D4;\n    --white: #FFFFFF;\n    --white8: rgba(255, 255, 255, 0.8);\n    --white5: rgba(255, 255, 255, 0.5); \n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    background-color: var(--black);\n    font-family: 'Roboto', sans-serif;\n    font-size: 18px;\n}\n\n.wrapper {\n    background-color: var(--deepsea);\n    max-width: 550px;\n    min-height: 100vh;\n    margin: 0 auto;\n}\n\nheader {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--darkblue);\n    padding-bottom: 20px;\n}\n\nh1,\np {\n    margin: 0;\n}\n\nh2 {\n    margin: 20px;\n    color: var(--white);\n    font-family: 'Inconsolata', monospace;\n    border-bottom: 2px solid var(--white5);\n    padding-bottom: 5px;\n}\n\nheader > h1 {\n    font-family: 'Inknut Antiqua', serif;\n    font-size: 3rem;\n    color: var(--white);\n    text-align: center;\n}\n\nheader > p {\n    font-family: 'Inconsolata', monospace;\n    font-size: 0.9rem;\n    color: white;\n    text-align: left;\n    margin: 0 85px;\n}\n\nnav {\n    align-self: end;\n    position: relative;\n    bottom: -34px;\n\n    display: flex;\n    gap: 1px;\n}\n\nbutton {\n    cursor: pointer;\n}\n\nbutton > img {\n    pointer-events: none;\n}\n\nheader button {\n    height: 34px;\n    padding: 5px 10px;\n    border: none;\n    background-color: var(--blue);\n    font-family: 'Inconsolata', monospace;\n    font-weight: bold;\n    color: var(--white8);\n}\n\nheader button:hover {\n    background-color: var(--black);\n    cursor: pointer;\n}\n\nimg {\n    height: 20px;\n    width: auto;\n}\n\n.task-header {\n    display: flex;\n    border-bottom: var(--grey);\n    font-family: 'Inconsolata', monospace;\n    font-weight: bold;\n    font-size: 0.9rem;\n    color: var(--white5);\n}\n\n\nmain {\n    margin-top: 20px;\n}\n\n.task-header {\n    display: flex;\n    align-items: baseline;\n    gap: 10px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid var(--grey);\n    margin: 10px 200px 25px 20px;\n    color: var(--white5);\n    list-style: none;\n}\n\n.task-header .active {\n    color: var(--white);\n    font-size: 1.5rem;\n}\n\n.task-container > .task-item,\n.project-item {\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n    height: 32px;\n    color: var(--white8)\n}\n\n.task-container > .task-item:hover,\n.project-item:hover {\n    background-color: var(--blue);\n}\n\n.task-container label {\n    padding: 5px 10px;\n}\n\n.task-menu {\n    display: none;\n    margin: 0 10px 0 auto;\n}\n\n.task-menu-visible {\n    display: flex;\n    gap: 5px;\n}\n\nlabel[for=\"taskInput\"] {\n    position: relative;\n    right: 8px;\n    color: #000000a1;\n    font-size: 2rem;\n}\n\ninput#taskInput {\n    position: relative;\n    right: 37px;\n    width: 100%;\n    padding: 5px 5px 5px 30px;\n    background-color: var(--black);\n    border: none;\n    font-size: 1rem;\n    border-radius: 1rem;\n}\n\ninput#taskInput:focus-visible {\n    outline: none;\n    color: var(--white);\n    background-color: var(--black);\n    border-radius: 1rem;\n    border:none;\n}\n\n.enter-btn {\n    position: relative;\n    right: 75px;\n    border: none;\n    background-color: transparent;\n}\n\n.form {\n    display: block;\n    padding: 10px;\n    margin: 0 85px 0 20px;\n    background-color: var(--black);\n    border-radius: 1rem;\n}\n\n\n.form label {\n    padding: 0;\n    font-size: 0.9rem;\n}\n\n.form > input:first-of-type {\n    display: block;\n    margin-bottom: 15px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 1rem;\n    background: #000000a6;\n    color: white;\n    font-size: 1.5rem;\n}\n\ninput#dueDate {\n    margin-right: 20px;\n}\n\nlabel[for=\"taskDesc\"] {\n    display: block;\n    margin-top: 10px;\n}\n\ninput#taskDesc {\n    display: block;\n    background-color: transparent;\n    border: none;\n    width: 400px;\n    padding: 5px 10px;\n}\n\n#taskDesc:focus-visible {\n    outline: none;\n    color: var(--white);\n    background-color: black;\n    border-radius: 1rem;\n}\n\n.add-task {\n    font-family: 'Inconsolata', monospace;\n    font-size: 0.9rem;\n    font-weight: bold;\n    margin: 20px;\n    padding: 5px 10px;\n    background-color: var(--blue);\n    border: none;\n    color: white;\n    box-shadow: rgba(0, 0, 0, 0.5) 1px 1px 5px;\n}\n\n.add-task:active {\n    background-color: var(--darkblue);\n}\n\n.submit-btn {\n    margin: 10px 5px;\n    background-color: var(--blue);\n    border: none;\n    border-radius: 0.2rem;\n    padding: 5px 10px;\n    color: #ffffffc4;\n    font-weight: bold;\n}\n\n.close-btn {\n    margin-left: 280px;\n    background-color: red;\n    border: none;\n    border-radius: 0.2rem;\n    padding: 5px 10px;\n    color: #ffffffc4;\n    font-weight: bold;\n}\n\n.project-item {\n    height: 32px;\n}\n\n.project-input-wrapper {\n    display: flex;\n    align-items: center;\n}\n\ninput#addProject {\n    margin: 10px 20px;\n    padding: 5px 10px;\n    background: var(--black);\n    border: none;\n    border-radius: 0.5rem;\n    outline: none;\n    color: white;\n}\n\ninput#addProject:focus-visible {\n    background-color: white;\n    color: black;\n}\n\n.project-input-wrapper > button {\n    background: white;\n    border: none;\n    border-radius: 100%;\n    margin-left: -10px;\n    width: 2rem;\n    height: 2rem;\n}\n\n.project-item-edit {\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n}\n\ninput#editInput {\n    background: white;\n    border: none;\n    border-radius: 0.5rem;\n    padding: 5px 10px;\n}\n\n.project-item-edit > button {\n    background: transparent;\n    border: none;\n    border-radius: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 2rem;\n    height: 2rem;\n}\n\n.project-item-edit > button:hover {\n    background-color: var(--black);\n}\n\n.project-item-edit > .confirm-btn {\n    margin-left: 10px;\n}\n\n.project-item-edit > .cancel-btn:hover {\n    background-color: rgb(255,0,0,0.8);\n}\n\n.priority-high {\n    border-left: 5px solid red;\n}\n\n.priority-normal {\n    border-left: 5px solid orange;\n}\n\n.priority-low {\n    border-left: 5px solid white;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@300;400;700&family=Inknut+Antiqua:wght@300;400;700&family=Roboto:wght@300;400;700&display=swap');\n\n/* font-family: 'Inconsolata', monospace;\nfont-family: 'Inknut Antiqua', serif;\nfont-family: 'Roboto', sans-serif; */\n\n:root {\n    --black: #164E63;\n    --grey: rgba(0, 0, 0, 0.75);\n    --deepsea: #155E75;\n    --darkblue: #0E7490;\n    --blue: #06B6D4;\n    --white: #FFFFFF;\n    --white8: rgba(255, 255, 255, 0.8);\n    --white5: rgba(255, 255, 255, 0.5); \n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    background-color: var(--black);\n    font-family: 'Roboto', sans-serif;\n    font-size: 18px;\n}\n\n.wrapper {\n    background-color: var(--deepsea);\n    max-width: 550px;\n    min-height: 100vh;\n    margin: 0 auto;\n}\n\nheader {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--darkblue);\n    padding-bottom: 20px;\n}\n\nh1,\np {\n    margin: 0;\n}\n\nh2 {\n    margin: 20px;\n    color: var(--white);\n    font-family: 'Inconsolata', monospace;\n    border-bottom: 2px solid var(--white5);\n    padding-bottom: 5px;\n}\n\nheader > h1 {\n    font-family: 'Inknut Antiqua', serif;\n    font-size: 3rem;\n    color: var(--white);\n    text-align: center;\n}\n\nheader > p {\n    font-family: 'Inconsolata', monospace;\n    font-size: 0.9rem;\n    color: white;\n    text-align: left;\n    margin: 0 85px;\n}\n\nnav {\n    align-self: end;\n    position: relative;\n    bottom: -34px;\n\n    display: flex;\n    gap: 1px;\n}\n\nbutton {\n    cursor: pointer;\n}\n\nbutton > img {\n    pointer-events: none;\n}\n\nheader button {\n    height: 34px;\n    padding: 5px 10px;\n    border: none;\n    background-color: var(--blue);\n    font-family: 'Inconsolata', monospace;\n    font-weight: bold;\n    color: var(--white8);\n}\n\nheader button:hover {\n    background-color: var(--black);\n    cursor: pointer;\n}\n\nimg {\n    height: 20px;\n    width: auto;\n}\n\n.task-header {\n    display: flex;\n    border-bottom: var(--grey);\n    font-family: 'Inconsolata', monospace;\n    font-weight: bold;\n    font-size: 0.9rem;\n    color: var(--white5);\n}\n\n\nmain {\n    margin-top: 20px;\n}\n\n.task-header {\n    display: flex;\n    align-items: baseline;\n    gap: 10px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid var(--grey);\n    margin: 10px 200px 25px 20px;\n    color: var(--white5);\n    list-style: none;\n}\n\n.task-header .active {\n    color: var(--white);\n    font-size: 1.5rem;\n}\n\n.task-container > .task-item,\n.project-item {\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n    height: 32px;\n    color: var(--white8)\n}\n\n.task-container > .task-item:hover,\n.project-item:hover {\n    background-color: var(--blue);\n}\n\n.task-container label {\n    padding: 5px 10px;\n}\n\n.task-menu {\n    display: none;\n    margin: 0 10px 0 auto;\n}\n\n.task-menu-visible {\n    display: flex;\n    gap: 5px;\n}\n\nlabel[for=\"taskInput\"] {\n    position: relative;\n    right: 8px;\n    color: #000000a1;\n    font-size: 2rem;\n}\n\ninput#taskInput {\n    position: relative;\n    right: 37px;\n    width: 100%;\n    padding: 5px 5px 5px 30px;\n    background-color: var(--black);\n    border: none;\n    font-size: 1rem;\n    border-radius: 1rem;\n}\n\ninput#taskInput:focus-visible {\n    outline: none;\n    color: var(--white);\n    background-color: var(--black);\n    border-radius: 1rem;\n    border:none;\n}\n\n.enter-btn {\n    position: relative;\n    right: 75px;\n    border: none;\n    background-color: transparent;\n}\n\n.form {\n    display: block;\n    padding: 10px;\n    margin: 0 85px 0 20px;\n    background-color: var(--black);\n    border-radius: 1rem;\n}\n\n\n.form label {\n    padding: 0;\n    font-size: 0.9rem;\n}\n\n.form > input:first-of-type {\n    display: block;\n    margin-bottom: 15px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 1rem;\n    background: #000000a6;\n    color: white;\n    font-size: 1.5rem;\n}\n\ninput#dueDate {\n    margin-right: 20px;\n}\n\nlabel[for=\"taskDesc\"] {\n    display: block;\n    margin-top: 10px;\n}\n\ninput#taskDesc {\n    display: block;\n    background-color: transparent;\n    border: none;\n    width: 400px;\n    padding: 5px 10px;\n}\n\n#taskDesc:focus-visible {\n    outline: none;\n    color: var(--white);\n    background-color: black;\n    border-radius: 1rem;\n}\n\n.add-task {\n    font-family: 'Inconsolata', monospace;\n    font-size: 0.9rem;\n    font-weight: bold;\n    margin: 20px;\n    padding: 5px 10px;\n    background-color: var(--blue);\n    border: none;\n    color: white;\n    box-shadow: rgba(0, 0, 0, 0.5) 1px 1px 5px;\n}\n\n.add-task:active {\n    background-color: var(--darkblue);\n}\n\n.submit-btn {\n    margin: 10px 5px;\n    background-color: var(--blue);\n    border: none;\n    border-radius: 0.2rem;\n    padding: 5px 10px;\n    color: #ffffffc4;\n    font-weight: bold;\n}\n\n.close-btn {\n    margin-left: 280px;\n    background-color: red;\n    border: none;\n    border-radius: 0.2rem;\n    padding: 5px 10px;\n    color: #ffffffc4;\n    font-weight: bold;\n}\n\n.project-item {\n    height: 32px;\n}\n\n.project-input-wrapper {\n    display: flex;\n    align-items: center;\n}\n\ninput#addProject {\n    margin: 10px 20px;\n    padding: 5px 10px;\n    background: var(--black);\n    border: none;\n    border-radius: 0.5rem;\n    outline: none;\n    color: white;\n}\n\ninput#addProject:focus-visible {\n    background-color: white;\n    color: black;\n}\n\n.project-input-wrapper > button {\n    background: white;\n    border: none;\n    border-radius: 100%;\n    margin-left: -10px;\n    width: 2rem;\n    height: 2rem;\n}\n\n.project-item-edit {\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n}\n\ninput#editInput {\n    background: white;\n    border: none;\n    border-radius: 0.5rem;\n    padding: 5px 10px;\n}\n\n.project-item-edit > button {\n    background: transparent;\n    border: none;\n    border-radius: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 2rem;\n    height: 2rem;\n}\n\n.project-item-edit > button:hover {\n    background-color: var(--black);\n}\n\n.project-item-edit > .confirm-btn {\n    margin-left: 10px;\n}\n\n.project-item-edit > .cancel-btn:hover {\n    background-color: rgb(255,0,0,0.8);\n}\n\n.priority-high {\n    border-left: 5px solid red;\n}\n\n.priority-normal {\n    border-left: 5px solid orange;\n}\n\n.priority-low {\n    border-left: 5px solid white;\n}"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var d=n[A],s=r.base?d[0]+r.base:d[0],c=a[s]||0,l="".concat(s," ").concat(c);a[s]=c+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var d=r(n,o),s=0;s<a.length;s++){var c=t(a[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),d=t.n(A),s=t(216),c=t.n(s),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=[{projectTitle:"Project 1",tasks:[{title:"Task 1",dueDate:"2022-01-01",priority:"low",description:"This is description of task 1",checked:"false"},{title:"Task 2 (high priority)",dueDate:"2022-01-02",priority:"high",description:"This is description of task 2",checked:"false"},{title:"Task 3 (normal priority)",dueDate:"2022-03-01",priority:"normal",description:"This is description of task 3",checked:"false"},{title:"Task 4 (low priority)",dueDate:"2022-04-01",priority:"low",description:"This is description of task 4",checked:"false"}],status:"active"},{projectTitle:"Project 2",tasks:[{title:"Task 99",dueDate:"2032-04-01",priority:"low",description:"This is description of task 99",checked:"true"},{title:"Task 100",dueDate:"2032-04-02",priority:"low",description:"This is description of task 100",checked:"false"},{title:"Task 101",dueDate:"2032-04-03",priority:"high",description:"This is description of task 101",checked:"true"},{title:"Task 102",dueDate:"2022-04-10",priority:"high",description:"This is description of task 1000",checked:"false"}],status:"inactive"}],b=n=>{let e=n.find((n=>"active"==n.status));return null!=e||(n[0].status="active",e=n.find((n=>"active"==n.status))),e},g=t.p+"25fed70b111094dad80c.png",h=t.p+"a6fd29509719f079bfd7.png",B=t.p+"e42c3c63c6b97a10746d.png",f=(t.p,t.p+"5c0cf42e4e511be0384b.png"),I=t.p+"a302a11767ccb3f212db.png",k=t.p+"5bb670bc69146c9434cf.png",x=n=>{const e=document.createElement("p");return e.textContent=n,e},v=n=>{const e=new Image;return e.src=n,e},y=(n,e)=>{const t=document.createElement("input");return t.setAttribute("id",n),t.setAttribute("name",n),t.setAttribute("type",e),t},w=(n,e)=>{const t=document.createElement("label");return t.setAttribute("for",n),t.textContent=e,t},E=(n,e,t)=>{const r=document.createElement("div");r.classList.add("task-menu"),r.dataset.itemId=n;const o=document.createElement("button"),a=document.createElement("button"),i=v(B),A=v(h);return o.classList.add(e),a.classList.add(t),o.appendChild(i),a.appendChild(A),r.appendChild(o),r.appendChild(a),r},j=n=>{const e=document.createElement("option");return e.setAttribute("value",n.toLowerCase()),e.textContent=n,e},Y=(n,e,t,r,o="none")=>{const a=document.createElement("div");a.classList.add("form"),a.dataset.itemId=o;const i=y("taskTitle","text");i.setAttribute("placeholder","Task title...");const A=w("dueDate","Due Date: "),d=y("dueDate","date"),s=w("priority","Priority: "),c=document.createElement("select");c.setAttribute("name","priority"),c.setAttribute("id","task-priority");const l=w("taskDesc","Notes:"),p=y("taskDesc","text");p.setAttribute("placeholder","insert your notes here");const u=document.createElement("button");u.textContent="Submit",u.classList.add("submit-btn");const m=document.createElement("button");m.classList.add("close-btn"),m.textContent="Close";const C=j("High"),b=j("Normal"),g=j("Low");switch(i.value=n,d.value=e,p.value=r,t){case"high":C.setAttribute("selected",!0);break;case"normal":b.setAttribute("selected",!0);break;case"low":g.setAttribute("selected",!0)}return c.appendChild(C),c.appendChild(b),c.appendChild(g),a.appendChild(i),a.appendChild(A),a.appendChild(d),a.appendChild(s),a.appendChild(c),a.appendChild(l),a.appendChild(p),a.appendChild(u),a.appendChild(m),a},q=()=>{const n=document.createElement("div"),e=(n=>{const e=document.createElement("li");return e.textContent="All Task",e})();return n.classList.add("task-header"),e.classList.add("active"),n.appendChild(e),n},T=()=>{const n=document.createElement("div");n.classList.add("task-container");const e=document.createElement("button");return e.textContent="+ Add Task",e.classList.add("add-task"),b(C).tasks.forEach((e=>{const t=b(C).tasks.indexOf(e),r=((n,e,t)=>{const r=document.createElement("div");r.classList.add("task-item"),r.dataset.itemId=n;const o=y(n,"checkbox");"true"==t&&(o.checked=!0);const a=w(n,e);return r.appendChild(o),r.appendChild(a),r})(t,e.title,e.checked);switch(e.priority){case"high":r.classList.add("priority-high");break;case"normal":r.classList.add("priority-normal");break;case"low":r.classList.add("priority-low")}r.appendChild(E(t,"edit-task-btn","delete-task-btn")),n.appendChild(r)})),n.appendChild(e),n},S=()=>{const n=document.createElement("div"),e=document.createElement("h2");e.textContent=`Project (${C.length}):`,n.appendChild(e);const t=document.createElement("div");t.classList.add("project-input-wrapper");const r=y("addProject","text"),o=v(f),a=document.createElement("button");return r.setAttribute("placeholder","+ Create new project"),a.classList.add("add-project-btn"),C.forEach((e=>{const t=C.indexOf(e),r=document.createElement("div");r.classList.add("project-item"),r.textContent=e.projectTitle,r.dataset.itemId=t,r.appendChild(E(t,"edit-project-btn","delete-project-btn")),n.appendChild(r)})),a.appendChild(o),t.appendChild(r),t.appendChild(a),n.appendChild(t),n},N=()=>{const n=document.createElement("div");return n.classList.add("wrapper"),n.appendChild((()=>{let n=b(C).tasks.filter((n=>"false"==n.checked)).length;const e=document.createElement("header"),t=document.createElement("h1"),r=x(`You have ${n} task left to do,`),o=x("Let's do it!"),a=document.createElement("nav"),i=document.createElement("button"),A=document.createElement("button"),d=v(g);return t.textContent="Just Do It List",i.textContent=b(C).projectTitle,A.classList.add("projects-menu"),d.classList.add("projects-menu"),A.appendChild(d),a.appendChild(i),a.appendChild(A),e.appendChild(t),e.appendChild(r),e.appendChild(o),e.appendChild(a),e})()),n.appendChild((()=>{const n=document.createElement("main");return n.appendChild(q()),n.appendChild(T()),n})()),n},L=document.querySelector("#content");let D=!1;L.appendChild(N());const Z=()=>{document.querySelector(".wrapper").remove(),L.appendChild(N()),D=!1},z=()=>{document.querySelector("main").replaceChildren(S()),W(),D=!1};function F(n,e){e.parentNode.insertBefore(n,e.nextSibling)}const P=n=>{n.forEach((n=>{n.addEventListener("mouseenter",(()=>{if(!D){const e=n.dataset.itemId;document.querySelector(`.task-menu[data-item-id="${e}"]`).classList.add("task-menu-visible")}})),n.addEventListener("mouseleave",(()=>{const e=n.dataset.itemId;document.querySelector(`.task-menu[data-item-id="${e}"]`).classList.remove("task-menu-visible")}))}))},W=()=>{document.querySelector("nav>button:first-of-type").textContent=b(C).projectTitle};L.addEventListener("click",(n=>{if("projects-menu"===n.target.className){D=!1;const n=document.querySelector("main");n.childNodes.length>1?n.replaceChildren(S()):(n.replaceChildren(q(),T()),W())}if("edit-task-btn"==n.target.className){D=!0;const e=n.target.parentNode.dataset.itemId,t=n.target.parentNode.parentNode,r=b(C);F(Y(r.tasks[e].title,r.tasks[e].dueDate,r.tasks[e].priority,r.tasks[e].description,e),t),t.style.display="none"}if("delete-task-btn"===n.target.className){e=n.target.parentNode.dataset.itemId,b(C).tasks.splice(e,1),Z()}var e,t,r;if("submit-btn"===n.target.className){const e=n.target.parentNode.attributes[1].value,t=document.querySelector("input#taskTitle"),r=document.querySelector("input#dueDate"),o=document.querySelector("select#task-priority"),a=document.querySelector("input#taskDesc"),i=t.value,A=r.value,d=o.value,s=a.value,c=i.trim();""!=i&&""!=c&&("none"===e?((n,e,t,r)=>{const o=b(C),a=((n,e,t,r,o)=>({title:n,dueDate:e,priority:t,description:r,checked:"false"}))(n,e,t,r);o.tasks.push(a)})(i,A,d,s):((n,e,t,r,o)=>{const a=b(C);a.tasks[o].title=n,a.tasks[o].dueDate=e,a.tasks[o].priority=t,a.tasks[o].description=r})(i,A,d,s,e),Z())}if("add-task"===n.target.className&&(D=!0,F(Y("",(()=>{let n=new Date,e=String(n.getDate()).padStart(2,"0"),t=String(n.getMonth()+1).padStart(2,"0"),r=n.getFullYear();return n=`${r}-${t}-${e}`,n})(),"normal",""),n.originalTarget.parentNode),n.originalTarget.style.display="none"),"close-btn"===n.target.className&&(D=!1,"none"===n.target.parentNode.attributes[1].value?(document.querySelector(".add-task").style.display="block",n.target.parentNode.remove()):(n.target.parentNode.previousSibling.style.display="flex",n.target.parentNode.remove())),"project-item"===n.target.className){const e=n.target.dataset.itemId;t=C[e],b(C).status="inactive",t.status="active",Z()}if("add-project-btn"===n.target.className){const n=document.querySelector("#addProject").value,e=n.trim();""!=n&&""!=e&&(((n,e)=>{const t={projectTitle:n,tasks:[],status:"inactive"};e.push(t),1===e.length&&(e[0].status="active")})(n,C),z())}if("delete-project-btn"===n.target.className){r=n.target.parentNode.dataset.itemId,C.splice(r,1),z()}if("edit-project-btn"===n.target.className){D=!0;const e=n.target.parentNode.parentNode,t=n.target.parentNode.dataset.itemId;e.style.display="none",F(((n,e)=>{const t=document.createElement("div"),r=y("editInput","text"),o=document.createElement("button"),a=document.createElement("button"),i=v(I),A=v(k);return t.classList.add("project-item-edit"),o.classList.add("confirm-btn"),a.classList.add("cancel-btn"),t.dataset.itemId=n,r.value=e,o.appendChild(i),a.appendChild(A),t.appendChild(r),t.appendChild(o),t.appendChild(a),t})(t,C[t].projectTitle),e),(n=>{const e=n;e.focus(),e.select()})(e.nextSibling.firstChild)}if("confirm-btn"===n.target.className){const e=n.target.parentNode.dataset.itemId,t=n.target.parentNode.firstChild.value,r=t.trim();""!=t&&""!=r&&(C[e].projectTitle=t,console.log(C),z())}"cancel-btn"===n.target.className&&z()})),L.addEventListener("mouseover",(n=>{if(n.target.className.includes("task-item")&&0==D){const n=document.querySelectorAll(".task-item");P(n)}if(n.target.className.includes("project-item")&&0==D){const n=document.querySelectorAll(".project-item");P(n)}})),L.addEventListener("change",(n=>{if("checkbox"==n.target.type){n.target.checked?b(C).tasks[n.target.id].checked="true":b(C).tasks[n.target.id].checked="false";const e=document.querySelector("header>p:nth-of-type(1)");let t=b(C).tasks.filter((n=>"false"==n.checked)).length;e.textContent=`You have ${t} task left to do,`}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,